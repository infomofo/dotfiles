" PLUGINS

" COLORS
colorscheme slate

syntax on
filetype indent on
filetype plugin on

set smarttab                    " make <tab> and <backspace> smarter
set tabstop=2                   " tabstops of 2
set softtabstop=2               " soft tabstops of 2
set expandtab                   " tabs are turned into spaces
set number
set showcmd             " show command in bottom bar
set cursorline          " highlight current line
set wildmenu            " visual autocomplete for command menu
set wildcharm=<TAB>
set lazyredraw          " redraw only when we need to.
set showmatch           " highlight matching [{()}]
set autochdir           " automatically change directory to local path for the purpose of autocompletion
set belloff=all
set autoread            " Reload files when they're changed on disk

set clipboard=unnamed
set autoindent smartindent      " turn on auto/smart indenting
set shiftwidth=2                " indents of 2
set backspace=eol,start,indent  " allow backspacing over indent, eol, & start
set undolevels=10000            " number of forgivable mistakes
set updatecount=100             " write swap file to disk every 100 chars

" search feature
set ignorecase " ignore case
set smartcase  " match case if a capital letter is present in the regexp
set hlsearch   " highlight matched patterns
" map <Leader>/ :nohlsearch<cr>
set incsearch  " highlight search result as you type it

" finding
set path+=**

" spell check
"map <Leader>ss :setlocal spell!<cr>

set nocompatible   " Disable vi-compatibility
set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show unicode glyphs

set list!
set listchars=tab:▸\ ,trail:•,extends:»,precedes:« " whitespace and trailing spaces

set directory=/tmp "sets the swap (.swp) file directory

set mouse=a " allow mouse scrolling

set cm=blowfish2     " encryption cypher for journaling - best (requires Vim version 7.4.399 or higher)

" bind K to grep word under cursor
nnoremap gr :grep <cword> *<CR>
nnoremap Gr :grep <cword> %:p:h/*<CR>
nnoremap gR :grep '\b<cword>\b' *<CR>
nnoremap GR :grep '\b<cword>\b' %:p:h/*<CR>

" vim-markdown
let g:vim_markdown_frontmatter = 1

" Don't offer to open certain files/directories
set wildignore+=*.bmp,*.ico
set wildignore+=*.pdf,*.psd
set wildignore+=node_modules/*,bower_components/*

let wiki_1 = {}
let wiki_1.path = '~/Library/Mobile Documents/iCloud~md~obsidian/Documents/vault/'
let wiki_1.syntax = 'markdown'
let wiki_1.ext = '.md'

let g:vimwiki_list = [wiki_1]
let g:vimwiki_ext2syntax = {'.md': 'markdown', '.markdown': 'markdown', '.mdown': 'markdown'}

if &term =~ '^screen'
  " tmux will send xterm-style keys when its xterm-keys option is on
  execute "set <xUp>=\e[1;*A"
  execute "set <xDown>=\e[1;*B"
  execute "set <xRight>=\e[1;*C"
  execute "set <xLeft>=\e[1;*D"
endif
let g:vimwiki_listsyms = ' /x'

au FileType html,php,markdown,mmd,md,text,mail,gitcommit
    \ runtime macros/emoji-ab.vim

au FocusGained,BufEnter * :checktime

" vim-prettier
packloadall
let g:prettier#autoformat_require_pragma = 0

" ctags
set tags=~/mytags

